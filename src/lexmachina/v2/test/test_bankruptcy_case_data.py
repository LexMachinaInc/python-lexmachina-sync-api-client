# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bankruptcy_case_data import BankruptcyCaseData

class TestBankruptcyCaseData(unittest.TestCase):
    """BankruptcyCaseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BankruptcyCaseData:
        """Test BankruptcyCaseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BankruptcyCaseData`
        """
        model = BankruptcyCaseData()
        if include_optional:
            return BankruptcyCaseData(
                bankruptcy_case_id = 56,
                title = '',
                court = '',
                civil_action_number = '',
                status = 'Open',
                case_tags = [
                    ''
                    ],
                dates = openapi_client.models.bankruptcy_case_dates.BankruptcyCaseDates(
                    filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    last_docket = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                judges = [
                    openapi_client.models.bankruptcy_judge.BankruptcyJudge(
                        name = '', 
                        bankruptcy_judge_id = 56, )
                    ],
                law_firms = [
                    openapi_client.models.law_firm.LawFirm(
                        name = '', 
                        law_firm_id = 56, 
                        client_party_ids = [
                            56
                            ], )
                    ],
                attorneys = [
                    openapi_client.models.attorney.Attorney(
                        name = '', 
                        attorney_id = 56, 
                        law_firm_ids = [
                            56
                            ], 
                        clients_party_ids = [
                            56
                            ], )
                    ],
                parties = [
                    openapi_client.models.party.Party(
                        name = '', 
                        party_id = 56, 
                        role = '', )
                    ],
                assets = '',
                liabilities = ''
            )
        else:
            return BankruptcyCaseData(
                bankruptcy_case_id = 56,
                title = '',
                court = '',
                civil_action_number = '',
                status = 'Open',
                case_tags = [
                    ''
                    ],
                dates = openapi_client.models.bankruptcy_case_dates.BankruptcyCaseDates(
                    filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    last_docket = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                judges = [
                    openapi_client.models.bankruptcy_judge.BankruptcyJudge(
                        name = '', 
                        bankruptcy_judge_id = 56, )
                    ],
                law_firms = [
                    openapi_client.models.law_firm.LawFirm(
                        name = '', 
                        law_firm_id = 56, 
                        client_party_ids = [
                            56
                            ], )
                    ],
                attorneys = [
                    openapi_client.models.attorney.Attorney(
                        name = '', 
                        attorney_id = 56, 
                        law_firm_ids = [
                            56
                            ], 
                        clients_party_ids = [
                            56
                            ], )
                    ],
                parties = [
                    openapi_client.models.party.Party(
                        name = '', 
                        party_id = 56, 
                        role = '', )
                    ],
        )
        """

    def testBankruptcyCaseData(self):
        """Test BankruptcyCaseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
