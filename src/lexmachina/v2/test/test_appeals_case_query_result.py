# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.appeals_case_query_result import AppealsCaseQueryResult

class TestAppealsCaseQueryResult(unittest.TestCase):
    """AppealsCaseQueryResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppealsCaseQueryResult:
        """Test AppealsCaseQueryResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppealsCaseQueryResult`
        """
        model = AppealsCaseQueryResult()
        if include_optional:
            return AppealsCaseQueryResult(
                cases = [
                    openapi_client.models.appeals_case_reference.AppealsCaseReference(
                        url = '', 
                        appeals_case_id = 56, )
                    ]
            )
        else:
            return AppealsCaseQueryResult(
                cases = [
                    openapi_client.models.appeals_case_reference.AppealsCaseReference(
                        url = '', 
                        appeals_case_id = 56, )
                    ],
        )
        """

    def testAppealsCaseQueryResult(self):
        """Test AppealsCaseQueryResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
