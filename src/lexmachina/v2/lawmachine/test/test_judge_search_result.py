# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lawmachine.models.judge_search_result import JudgeSearchResult

class TestJudgeSearchResult(unittest.TestCase):
    """JudgeSearchResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JudgeSearchResult:
        """Test JudgeSearchResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JudgeSearchResult`
        """
        model = JudgeSearchResult()
        if include_optional:
            return JudgeSearchResult(
                federal_judges = [
                    lawmachine.models.federal_judge_result.FederalJudgeResult(
                        name = '', 
                        federal_judge_id = 56, 
                        initials = '', 
                        case_count_by_court = [
                            lawmachine.models.case_count_by_court.CaseCountByCourt(
                                court = '', 
                                count = 56, )
                            ], 
                        url = '', )
                    ],
                magistrate_judges = [
                    lawmachine.models.magistrate_judge_result.MagistrateJudgeResult(
                        name = '', 
                        magistrate_judge_id = 56, 
                        case_count_by_court = [
                            lawmachine.models.case_count_by_court.CaseCountByCourt(
                                court = '', 
                                count = 56, )
                            ], 
                        url = '', )
                    ],
                state_judges = [
                    lawmachine.models.state_judge_result.StateJudgeResult(
                        name = '', 
                        state_judge_id = 56, 
                        court_posting = '', 
                        url = '', )
                    ],
                bankruptcy_judges = [
                    lawmachine.models.bankruptcy_judge_result.BankruptcyJudgeResult(
                        name = '', 
                        bankruptcy_judge_id = 56, 
                        case_count_by_court = [
                            lawmachine.models.case_count_by_court.CaseCountByCourt(
                                court = '', 
                                count = 56, )
                            ], 
                        url = '', )
                    ]
            )
        else:
            return JudgeSearchResult(
                federal_judges = [
                    lawmachine.models.federal_judge_result.FederalJudgeResult(
                        name = '', 
                        federal_judge_id = 56, 
                        initials = '', 
                        case_count_by_court = [
                            lawmachine.models.case_count_by_court.CaseCountByCourt(
                                court = '', 
                                count = 56, )
                            ], 
                        url = '', )
                    ],
                magistrate_judges = [
                    lawmachine.models.magistrate_judge_result.MagistrateJudgeResult(
                        name = '', 
                        magistrate_judge_id = 56, 
                        case_count_by_court = [
                            lawmachine.models.case_count_by_court.CaseCountByCourt(
                                court = '', 
                                count = 56, )
                            ], 
                        url = '', )
                    ],
                state_judges = [
                    lawmachine.models.state_judge_result.StateJudgeResult(
                        name = '', 
                        state_judge_id = 56, 
                        court_posting = '', 
                        url = '', )
                    ],
                bankruptcy_judges = [
                    lawmachine.models.bankruptcy_judge_result.BankruptcyJudgeResult(
                        name = '', 
                        bankruptcy_judge_id = 56, 
                        case_count_by_court = [
                            lawmachine.models.case_count_by_court.CaseCountByCourt(
                                court = '', 
                                count = 56, )
                            ], 
                        url = '', )
                    ],
        )
        """

    def testJudgeSearchResult(self):
        """Test JudgeSearchResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
