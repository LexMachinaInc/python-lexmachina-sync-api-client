# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lawmachine.models.case_dates_filter import CaseDatesFilter

class TestCaseDatesFilter(unittest.TestCase):
    """CaseDatesFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CaseDatesFilter:
        """Test CaseDatesFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CaseDatesFilter`
        """
        model = CaseDatesFilter()
        if include_optional:
            return CaseDatesFilter(
                filed = lawmachine.models.timing_filter.TimingFilter(
                    on_or_after = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    on_or_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                terminated = lawmachine.models.timing_filter.TimingFilter(
                    on_or_after = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    on_or_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                trial = lawmachine.models.timing_filter.TimingFilter(
                    on_or_after = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    on_or_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                last_docket = lawmachine.models.timing_filter.TimingFilter(
                    on_or_after = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    on_or_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
            )
        else:
            return CaseDatesFilter(
        )
        """

    def testCaseDatesFilter(self):
        """Test CaseDatesFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
