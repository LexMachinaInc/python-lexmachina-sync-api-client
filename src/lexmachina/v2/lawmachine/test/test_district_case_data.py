# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lawmachine.models.district_case_data import DistrictCaseData

class TestDistrictCaseData(unittest.TestCase):
    """DistrictCaseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DistrictCaseData:
        """Test DistrictCaseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DistrictCaseData`
        """
        model = DistrictCaseData()
        if include_optional:
            return DistrictCaseData(
                district_case_id = 56,
                title = '',
                court = '',
                case_no = '',
                status = 'Open',
                case_type = [
                    ''
                    ],
                case_tags = [
                    ''
                    ],
                dates = lawmachine.models.district_case_dates.DistrictCaseDates(
                    filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    trial = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    last_docket = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                resolution = lawmachine.models.case_resolution.CaseResolution(
                    summary = '', 
                    specific = '', ),
                events = [
                    lawmachine.models.case_event.CaseEvent(
                        type = '', 
                        occurred = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                judges = [
                    lawmachine.models.federal_judge.FederalJudge(
                        name = '', 
                        federal_judge_id = 56, )
                    ],
                magistrate_judges = [
                    lawmachine.models.magistrate_judge.MagistrateJudge(
                        name = '', 
                        magistrate_judge_id = 56, )
                    ],
                remedies = lawmachine.models.district_case_remedies_by_status.DistrictCaseRemediesByStatus(
                    active = [
                        lawmachine.models.district_case_remedy.DistrictCaseRemedy(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    voided = [
                        lawmachine.models.district_case_remedy.DistrictCaseRemedy(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    reversed = [
                        
                        ], ),
                findings = lawmachine.models.district_case_findings_by_status.DistrictCaseFindingsByStatus(
                    active = [
                        lawmachine.models.district_case_finding.DistrictCaseFinding(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            in_favor_of_party_ids = [
                                56
                                ], 
                            patent_invalidity_reasons = [
                                ''
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            specific_reasons = [
                                ''
                                ], 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    voided = [
                        lawmachine.models.district_case_finding.DistrictCaseFinding(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            in_favor_of_party_ids = [
                                56
                                ], 
                            patent_invalidity_reasons = [
                                ''
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    reversed = [
                        
                        ], ),
                law_firms = [
                    lawmachine.models.law_firm.LawFirm(
                        name = '', 
                        law_firm_id = 56, 
                        client_party_ids = [
                            56
                            ], )
                    ],
                attorneys = [
                    lawmachine.models.attorney.Attorney(
                        name = '', 
                        attorney_id = 56, 
                        law_firm_ids = [
                            56
                            ], 
                        clients_party_ids = [
                            56
                            ], )
                    ],
                parties = [
                    lawmachine.models.party.Party(
                        name = '', 
                        party_id = 56, 
                        role = '', )
                    ],
                damages = lawmachine.models.district_case_damages_by_status.DistrictCaseDamagesByStatus(
                    active = [
                        lawmachine.models.district_case_damages.DistrictCaseDamages(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            awarded_against_party_ids = [
                                56
                                ], 
                            amount = null, 
                            awarded = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    voided = [
                        lawmachine.models.district_case_damages.DistrictCaseDamages(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            awarded_against_party_ids = [
                                56
                                ], 
                            amount = null, 
                            awarded = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    reversed = [
                        
                        ], ),
                patents = [
                    lawmachine.models.patent.Patent(
                        number = '', 
                        title = '', )
                    ],
                orders = lawmachine.models.orders.Orders(
                    expert_witnesses_admissibility_orders = lawmachine.models.expert_witnesses_admissibility_order_by_status.ExpertWitnessesAdmissibilityOrderByStatus(
                        active = [
                            lawmachine.models.expert_witness_admissibility_order.ExpertWitnessAdmissibilityOrder(
                                expert_witness = lawmachine.models.expert_witness.ExpertWitness(
                                    name = '', 
                                    expert_witness_id = 56, ), 
                                retaining_party_ids = [
                                    56
                                    ], 
                                opposing_party_ids = [
                                    56
                                    ], 
                                judge = null, 
                                docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                outcome = '', 
                                occurred = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                            ], 
                        voided = [
                            lawmachine.models.expert_witness_admissibility_order.ExpertWitnessAdmissibilityOrder(
                                expert_witness = lawmachine.models.expert_witness.ExpertWitness(
                                    name = '', 
                                    expert_witness_id = 56, ), 
                                retaining_party_ids = [
                                    56
                                    ], 
                                opposing_party_ids = [
                                    56
                                    ], 
                                docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                outcome = '', 
                                occurred = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                            ], 
                        reversed = [
                            
                            ], ), ),
                mdl = lawmachine.models.multi_district_litigation.MultiDistrictLitigation(
                    mdl_no = [
                        56
                        ], 
                    master_case_ids = [
                        56
                        ], 
                    truncated_data = True, ),
                appeals_cases = [
                    lawmachine.models.appeals_case.AppealsCase(
                        appeals_case_id = 56, 
                        appeals_case_url = '', 
                        resolution = lawmachine.models.case_resolution.CaseResolution(
                            summary = '', 
                            specific = '', ), 
                        filed_on = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                docket = lawmachine.models.docket.Docket(
                    entries = [
                        lawmachine.models.docket_entry.DocketEntry(
                            filed_on = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            tags = [
                                ''
                                ], 
                            text = '', 
                            number = 56, 
                            docket_entry_id = 56, )
                        ], 
                    retrieved = 'all', 
                    count = 56, )
            )
        else:
            return DistrictCaseData(
                district_case_id = 56,
                title = '',
                court = '',
                case_no = '',
                status = 'Open',
                case_type = [
                    ''
                    ],
                case_tags = [
                    ''
                    ],
                dates = lawmachine.models.district_case_dates.DistrictCaseDates(
                    filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    trial = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    last_docket = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                events = [
                    lawmachine.models.case_event.CaseEvent(
                        type = '', 
                        occurred = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                judges = [
                    lawmachine.models.federal_judge.FederalJudge(
                        name = '', 
                        federal_judge_id = 56, )
                    ],
                magistrate_judges = [
                    lawmachine.models.magistrate_judge.MagistrateJudge(
                        name = '', 
                        magistrate_judge_id = 56, )
                    ],
                remedies = lawmachine.models.district_case_remedies_by_status.DistrictCaseRemediesByStatus(
                    active = [
                        lawmachine.models.district_case_remedy.DistrictCaseRemedy(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    voided = [
                        lawmachine.models.district_case_remedy.DistrictCaseRemedy(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    reversed = [
                        
                        ], ),
                findings = lawmachine.models.district_case_findings_by_status.DistrictCaseFindingsByStatus(
                    active = [
                        lawmachine.models.district_case_finding.DistrictCaseFinding(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            in_favor_of_party_ids = [
                                56
                                ], 
                            patent_invalidity_reasons = [
                                ''
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            specific_reasons = [
                                ''
                                ], 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    voided = [
                        lawmachine.models.district_case_finding.DistrictCaseFinding(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            in_favor_of_party_ids = [
                                56
                                ], 
                            patent_invalidity_reasons = [
                                ''
                                ], 
                            against_party_ids = [
                                56
                                ], 
                            docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    reversed = [
                        
                        ], ),
                law_firms = [
                    lawmachine.models.law_firm.LawFirm(
                        name = '', 
                        law_firm_id = 56, 
                        client_party_ids = [
                            56
                            ], )
                    ],
                attorneys = [
                    lawmachine.models.attorney.Attorney(
                        name = '', 
                        attorney_id = 56, 
                        law_firm_ids = [
                            56
                            ], 
                        clients_party_ids = [
                            56
                            ], )
                    ],
                parties = [
                    lawmachine.models.party.Party(
                        name = '', 
                        party_id = 56, 
                        role = '', )
                    ],
                damages = lawmachine.models.district_case_damages_by_status.DistrictCaseDamagesByStatus(
                    active = [
                        lawmachine.models.district_case_damages.DistrictCaseDamages(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            awarded_against_party_ids = [
                                56
                                ], 
                            amount = null, 
                            awarded = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    voided = [
                        lawmachine.models.district_case_damages.DistrictCaseDamages(
                            name = '', 
                            type = '', 
                            judgment_source = '', 
                            awarded_to_party_ids = [
                                56
                                ], 
                            awarded_against_party_ids = [
                                56
                                ], 
                            amount = null, 
                            awarded = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                        ], 
                    reversed = [
                        
                        ], ),
                patents = [
                    lawmachine.models.patent.Patent(
                        number = '', 
                        title = '', )
                    ],
                orders = lawmachine.models.orders.Orders(
                    expert_witnesses_admissibility_orders = lawmachine.models.expert_witnesses_admissibility_order_by_status.ExpertWitnessesAdmissibilityOrderByStatus(
                        active = [
                            lawmachine.models.expert_witness_admissibility_order.ExpertWitnessAdmissibilityOrder(
                                expert_witness = lawmachine.models.expert_witness.ExpertWitness(
                                    name = '', 
                                    expert_witness_id = 56, ), 
                                retaining_party_ids = [
                                    56
                                    ], 
                                opposing_party_ids = [
                                    56
                                    ], 
                                judge = null, 
                                docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                outcome = '', 
                                occurred = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                            ], 
                        voided = [
                            lawmachine.models.expert_witness_admissibility_order.ExpertWitnessAdmissibilityOrder(
                                expert_witness = lawmachine.models.expert_witness.ExpertWitness(
                                    name = '', 
                                    expert_witness_id = 56, ), 
                                retaining_party_ids = [
                                    56
                                    ], 
                                opposing_party_ids = [
                                    56
                                    ], 
                                docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                outcome = '', 
                                occurred = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                negated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                reinstated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                            ], 
                        reversed = [
                            
                            ], ), ),
                mdl = lawmachine.models.multi_district_litigation.MultiDistrictLitigation(
                    mdl_no = [
                        56
                        ], 
                    master_case_ids = [
                        56
                        ], 
                    truncated_data = True, ),
                appeals_cases = [
                    lawmachine.models.appeals_case.AppealsCase(
                        appeals_case_id = 56, 
                        appeals_case_url = '', 
                        resolution = lawmachine.models.case_resolution.CaseResolution(
                            summary = '', 
                            specific = '', ), 
                        filed_on = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                docket = lawmachine.models.docket.Docket(
                    entries = [
                        lawmachine.models.docket_entry.DocketEntry(
                            filed_on = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            tags = [
                                ''
                                ], 
                            text = '', 
                            number = 56, 
                            docket_entry_id = 56, )
                        ], 
                    retrieved = 'all', 
                    count = 56, ),
        )
        """

    def testDistrictCaseData(self):
        """Test DistrictCaseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
