# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lawmachine.models.appeals_case_data import AppealsCaseData

class TestAppealsCaseData(unittest.TestCase):
    """AppealsCaseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppealsCaseData:
        """Test AppealsCaseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppealsCaseData`
        """
        model = AppealsCaseData()
        if include_optional:
            return AppealsCaseData(
                appeals_case_id = 56,
                title = '',
                court = '',
                civil_action_number = '',
                status = 'Open',
                case_tags = [
                    ''
                    ],
                dates = lawmachine.models.appeals_case_dates.AppealsCaseDates(
                    filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    last_docket = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                judges = [
                    lawmachine.models.federal_judge.FederalJudge(
                        name = '', 
                        federal_judge_id = 56, )
                    ],
                law_firms = [
                    lawmachine.models.law_firm.LawFirm(
                        name = '', 
                        law_firm_id = 56, 
                        client_party_ids = [
                            56
                            ], )
                    ],
                attorneys = [
                    lawmachine.models.attorney.Attorney(
                        name = '', 
                        attorney_id = 56, 
                        law_firm_ids = [
                            56
                            ], 
                        clients_party_ids = [
                            56
                            ], )
                    ],
                parties = [
                    lawmachine.models.party.Party(
                        name = '', 
                        party_id = 56, 
                        role = '', )
                    ],
                originating_venues = [
                    ''
                    ],
                originating_cases = [
                    lawmachine.models.originating_district_court_case.OriginatingDistrictCourtCase(
                        district_case_id = 56, 
                        district_case_url = '', 
                        judges = [
                            null
                            ], 
                        case_types = [
                            ''
                            ], )
                    ],
                appealability_rulings = [
                    ''
                    ],
                case_resolution = lawmachine.models.case_resolution.CaseResolution(
                    summary = '', 
                    specific = '', ),
                supreme_court_and_rehearing_decisions = [
                    lawmachine.models.supreme_court_or_rehearing_decision.SupremeCourtOrRehearingDecision(
                        docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        decision = '', 
                        original_resolution_docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        original_resolution = '', )
                    ]
            )
        else:
            return AppealsCaseData(
                appeals_case_id = 56,
                title = '',
                court = '',
                civil_action_number = '',
                status = 'Open',
                case_tags = [
                    ''
                    ],
                dates = lawmachine.models.appeals_case_dates.AppealsCaseDates(
                    filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    last_docket = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                judges = [
                    lawmachine.models.federal_judge.FederalJudge(
                        name = '', 
                        federal_judge_id = 56, )
                    ],
                law_firms = [
                    lawmachine.models.law_firm.LawFirm(
                        name = '', 
                        law_firm_id = 56, 
                        client_party_ids = [
                            56
                            ], )
                    ],
                attorneys = [
                    lawmachine.models.attorney.Attorney(
                        name = '', 
                        attorney_id = 56, 
                        law_firm_ids = [
                            56
                            ], 
                        clients_party_ids = [
                            56
                            ], )
                    ],
                parties = [
                    lawmachine.models.party.Party(
                        name = '', 
                        party_id = 56, 
                        role = '', )
                    ],
                originating_venues = [
                    ''
                    ],
                originating_cases = [
                    lawmachine.models.originating_district_court_case.OriginatingDistrictCourtCase(
                        district_case_id = 56, 
                        district_case_url = '', 
                        judges = [
                            null
                            ], 
                        case_types = [
                            ''
                            ], )
                    ],
                appealability_rulings = [
                    ''
                    ],
                supreme_court_and_rehearing_decisions = [
                    lawmachine.models.supreme_court_or_rehearing_decision.SupremeCourtOrRehearingDecision(
                        docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        decision = '', 
                        original_resolution_docket_entry_filed = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        original_resolution = '', )
                    ],
        )
        """

    def testAppealsCaseData(self):
        """Test AppealsCaseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
