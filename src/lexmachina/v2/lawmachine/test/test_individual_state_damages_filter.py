# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lawmachine.models.individual_state_damages_filter import IndividualStateDamagesFilter

class TestIndividualStateDamagesFilter(unittest.TestCase):
    """IndividualStateDamagesFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndividualStateDamagesFilter:
        """Test IndividualStateDamagesFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndividualStateDamagesFilter`
        """
        model = IndividualStateDamagesFilter()
        if include_optional:
            return IndividualStateDamagesFilter(
                name = lawmachine.models.name_filter.NameFilter(
                    include = [
                        ''
                        ], 
                    exclude = [
                        ''
                        ], ),
                var_date = lawmachine.models.timing_filter.TimingFilter(
                    on_or_after = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    on_or_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                awarded_to_parties = [
                    56
                    ],
                awarded_against_parties = [
                    56
                    ],
                minimum_amount = None
            )
        else:
            return IndividualStateDamagesFilter(
        )
        """

    def testIndividualStateDamagesFilter(self):
        """Test IndividualStateDamagesFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
