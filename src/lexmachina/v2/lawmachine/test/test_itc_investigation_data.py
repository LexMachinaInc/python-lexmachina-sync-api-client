# coding: utf-8

"""
    Lex Machina API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 20241105
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lawmachine.models.itc_investigation_data import ITCInvestigationData

class TestITCInvestigationData(unittest.TestCase):
    """ITCInvestigationData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ITCInvestigationData:
        """Test ITCInvestigationData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ITCInvestigationData`
        """
        model = ITCInvestigationData()
        if include_optional:
            return ITCInvestigationData(
                itc_investigation_id = '',
                investigation_number = '',
                title = '',
                investigation_types = [
                    'Patent'
                    ],
                status = 'Active',
                dates = lawmachine.models.itc_investigation_dates.ITCInvestigationDates(
                    notice = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                administrative_law_judges = [
                    lawmachine.models.administrative_law_judge.AdministrativeLawJudge(
                        name = '', )
                    ],
                dispositions = [
                    ''
                    ],
                parties = [
                    lawmachine.models.itc_party.ITCParty(
                        name = '', 
                        role = '', )
                    ],
                patents = [
                    lawmachine.models.patent.Patent(
                        number = '', 
                        title = '', )
                    ],
                itc_document_list = lawmachine.models.itc_document_list.ITCDocumentList(
                    entries = [
                        lawmachine.models.itc_document.ITCDocument(
                            usitc_document_id = 56, 
                            date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            title = '', 
                            type = '', 
                            filed_by = [
                                lawmachine.models.itc_document_entity_data.ITCDocumentEntityData(
                                    name = '', )
                                ], 
                            firm = [
                                lawmachine.models.itc_document_entity_data.ITCDocumentEntityData(
                                    name = '', )
                                ], 
                            on_behalf_of = [
                                
                                ], )
                        ], 
                    retrieved = 'all', 
                    count = 56, )
            )
        else:
            return ITCInvestigationData(
                itc_investigation_id = '',
                investigation_number = '',
                title = '',
                investigation_types = [
                    'Patent'
                    ],
                status = 'Active',
                dates = lawmachine.models.itc_investigation_dates.ITCInvestigationDates(
                    notice = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    terminated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                administrative_law_judges = [
                    lawmachine.models.administrative_law_judge.AdministrativeLawJudge(
                        name = '', )
                    ],
                dispositions = [
                    ''
                    ],
                parties = [
                    lawmachine.models.itc_party.ITCParty(
                        name = '', 
                        role = '', )
                    ],
                patents = [
                    lawmachine.models.patent.Patent(
                        number = '', 
                        title = '', )
                    ],
                itc_document_list = lawmachine.models.itc_document_list.ITCDocumentList(
                    entries = [
                        lawmachine.models.itc_document.ITCDocument(
                            usitc_document_id = 56, 
                            date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            title = '', 
                            type = '', 
                            filed_by = [
                                lawmachine.models.itc_document_entity_data.ITCDocumentEntityData(
                                    name = '', )
                                ], 
                            firm = [
                                lawmachine.models.itc_document_entity_data.ITCDocumentEntityData(
                                    name = '', )
                                ], 
                            on_behalf_of = [
                                
                                ], )
                        ], 
                    retrieved = 'all', 
                    count = 56, ),
        )
        """

    def testITCInvestigationData(self):
        """Test ITCInvestigationData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
